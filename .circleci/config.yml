# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  generate_workspace_job:
    parameters:
      git_tag:
        type: string
        default: ""
      git_branch:
        type: string
        default: ""

    macos:
      xcode: 13.2.1

    steps:
      - add_ssh_keys:
          fingerprints:
            - "8f:da:46:69:99:95:a8:fb:1f:b6:1d:28:78:d6:43:44"

      - checkout
      - install_gem_dependencies
      - download_tuist

      - when:
          condition: << parameters.git_tag >>
          steps:
            - generate_workspace:
                git_tag: << parameters.git_tag >>

      - when:
          condition: << parameters.git_branch >>
          steps:
            - generate_workspace:
                git_branch: << parameters.git_branch >>

      - when:
          condition:
            and:
               - not: << parameters.git_tag >>
               - not: << parameters.git_branch >>
          steps:
            - run: |
                echo "Missing Git tag or branch in `generate_workspace` job"
                exit 1

      - persist_to_workspace:
          root: ~/
          paths:
            - project
            - .tuist/Cache

  build_framework_job:
    parameters:
      # The Xcode configuration.
      configuration:
        type: enum
        enum: ["Debug", "Staging", "Release"]

      # The directory where to output AppierAds.xcframework
      xcframework_output_directory:
        type: string

      # The directory where to output AppierAdsFramework-vXXXX.zip.
      archive_output_directory:
        type: string

    macos:
      xcode: 13.2.1

    environment:
      FL_OUTPUT_DIR: output

    steps:
      - attach_workspace:
          at: ~/

      - install_gem_dependencies

      - build_framework:
          configuration: << parameters.configuration >>
          xcframework_output_directory: << parameters.xcframework_output_directory >>
          archive_output_directory: << parameters.archive_output_directory >>
      
      - store_artifacts:
          path: output/<< parameters.archive_output_directory >>

      - persist_to_workspace:
          root: output
          paths:
            - << parameters.xcframework_output_directory >>
            - << parameters.archive_output_directory >>

  checkout_custom_script:
    docker:
      - image: cimg/base:2021.04

    resource_class: small

    steps:
      - checkout:
          path: ./pmp-ios-admob-mediation

      - persist_to_workspace:
          root: ./pmp-ios-admob-mediation/ci
          paths:
            - git-setup.sh
            - checkout-custom.sh

  github_pr:
    parameters:
      # The location of the directory containing AppierAdsAdMobMediation.xcframework
      framework_path:
        type: string

    macos:
      xcode: 13.2.1

    steps:
      - checkout_custom:
          repository: git@github.com:appier/ads-ios-sdk.git
          branch: main
          path: ./ads-ios-sdk

      - install_gem_dependencies:
          gemfile_path: ./ads-ios-sdk

      - run:
          name: Replacing builds
          command: |
            rm -rf ads-ios-sdk/*.xcframework
            cp -rf << parameters.framework_path >>/*.xcframework ads-ios-sdk

      - run:
          name: Opening GitHub pull request
          command: |
            cd ads-ios-sdk
            bundle exec fastlane pr_admob_mediation

  github_release:
    macos:
      xcode: 13.2.1

    steps:
      - attach_workspace:
          at: ./

      - run:
          name: Configuring Git
          command: sh git-setup.sh

      - checkout_custom:
          repository: git@github.com:appier/ads-ios-sdk.git
          branch: main
          path: ./ads-ios-sdk

      - install_gem_dependencies:
          gemfile_path: ./ads-ios-sdk

      - run:
          name: Create GitHub release
          command: |
            cd ads-ios-sdk
            bundle exec fastlane release_admob_mediation
  
  deploy_pods:
    docker:
      - image: cimg/ruby:2.7

    resource_class: small

    steps:
      - attach_workspace:
          at: ./

      - run:
          name: Configuring Git
          command: sh git-setup.sh

      - checkout_custom:
          repository: git@github.com:appier/ads-ios-sdk.git
          branch: main
          path: ./ads-ios-sdk

      - install_gem_dependencies:
          gemfile_path: ./ads-ios-sdk

      - run:
          name: Deploy Podspecs to CocoaPods Trunk
          command: |
            cd ads-ios-sdk
            bundle exec fastlane pods_admob_mediation

commands:
  generate_workspace:
    description: "Generate Xcode workspace"

    parameters:
      git_tag:
        type: string
        default: ""
      git_branch:
        type: string
        default: ""

    steps:
      - when:
          condition: << parameters.git_tag >>
          steps:
            - run:
                name: Generating Xcode workspace
                command: bundle exec fastlane generate git_tag:<< parameters.git_tag >>
      - when:
          condition: << parameters.git_branch >>
          steps:
            - run:
                name: Generating Xcode workspace
                command: bundle exec fastlane generate git_branch:<< parameters.git_branch >>
      - when:
          condition:
            and:
               - not: << parameters.git_tag >>
               - not: << parameters.git_branch >>
          steps:
            - run: |
                echo "Missing Git tag or branch in `generate_workspace` command"
                exit 1

  download_tuist:
    description: "Download Tuist"

    steps:
      - run:
          name: Downloading Tuist
          command: bash <(curl -Ls https://install.tuist.io)

  install_gem_dependencies:
    description: "Install or restore Gem dependencies"

    parameters:
      gemfile_path:
        type: string
        default: "./"

    steps:
      - restore_cache:
          key: 1-gems-{{ arch }}-<< parameters.gemfile_path >>-{{ checksum "<< parameters.gemfile_path >>/Gemfile.lock" }}

      - run:
          name: Set Bundler cache directory
          command: |
            cd << parameters.gemfile_path >>
            bundle config set --local path 'vendor/bundle'

      - run:
          name: Installing Gem dependencies
          command: |
            cd << parameters.gemfile_path >>
            bundle check || bundle install

      - save_cache:
          key: 1-gems-{{ arch }}-<< parameters.gemfile_path >>-{{ checksum "<< parameters.gemfile_path >>/Gemfile.lock" }}
          paths:
            - ./<< parameters.gemfile_path >>/vendor/bundle

  build_framework:
    description: "Build framework"

    parameters:
      configuration:
        type: enum
        enum: ["Debug", "Staging", "Release"]
      xcframework_output_directory:
        type: string
      archive_output_directory:
        type: string

    steps:
      - run:
          name: Build Ads framework
          command: |
            bundle exec fastlane build \
              configuration:<< parameters.configuration >> \
              xcframework_output_directory:<< parameters.xcframework_output_directory >> \
              archive_output_directory:<< parameters.archive_output_directory >>

  checkout_custom:
    description: "Checkout repository"

    parameters:
      repository:
        type: string
      branch:
        type: string
      path:
        type: string

    steps:
      - attach_workspace:
          at: ./

      - run:
          name: Configuring Git
          command: sh git-setup.sh

      - run:
          name: Checkout code << parameters.repository >>
          command: sh checkout-custom.sh \
            "<< parameters.repository >>" \
            "<< parameters.branch >>" \
            "<< parameters.path >>"

workflows:
  deploy_framework:
    jobs:
      - generate_workspace_job:
          git_tag: << pipeline.git.tag >>
          git_branch: << pipeline.git.branch >>
          filters:
            tags:
              only: /release-.*/
            branches:
              only: master

      - build_framework_job:
          name: build_framework_job
          configuration: Release
          xcframework_output_directory: AppierAdsAdMobMediationWorkspace-Release-xcframework
          archive_output_directory: AppierAdsAdMobMediationWorkspace-Release
          requires:
            - generate_workspace_job
          filters:
            tags:
              only: /release-.*/
            branches:
              only: master

      - checkout_custom_script:
          filters:
            tags:
              only: /release-.*/
            branches:
              ignore: /.*/

      - github_pr:
          framework_path: AppierAdsAdMobMediationWorkspace-Release-xcframework
          requires:
            - build_framework_job
            - checkout_custom_script
          filters:
            tags:
              only: /release-.*/
            branches:
              ignore: /.*/

      - approve_release:
          type: approval
          requires:
            - github_pr
          filters:
            tags:
              only: /release-.*/
            branches:
              ignore: /.*/

      - github_release:
          requires:
            - approve_release
          filters:
            tags:
              only: /release-.*/
            branches:
              ignore: /.*/

      - deploy_pods:
          requires:
            - github_release
          filters:
            tags:
              only: /release-.*/
            branches:
              ignore: /.*/
